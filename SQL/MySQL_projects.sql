/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			10/18/2017
Description:	Creates the projects table and respective stored procedures

*/


USE smithadb;



-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `smithadb`.`projects` (
ProjectId INT AUTO_INCREMENT,
ProjectName VARCHAR(255),
ProjectDescription VARCHAR(1025),
ImgURL VARCHAR(1025),
ProjectURL VARCHAR(1025),
ProjectLeadAccountID INT,
ProjectCategoryID INT,
CONSTRAINT pk_projects_ProjectId PRIMARY KEY (ProjectId)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_projects_Load`
(
	 IN paramProjectId INT
)
BEGIN
	SELECT
		`projects`.`ProjectId` AS `ProjectId`,
		`projects`.`ProjectName` AS `ProjectName`,
		`projects`.`ProjectDescription` AS `ProjectDescription`,
		`projects`.`ImgURL` AS `ImgURL`,
		`projects`.`ProjectURL` AS `ProjectURL`,
		`projects`.`ProjectLeadAccountID` AS `ProjectLeadAccountID`,
		`projects`.`ProjectCategoryID` AS `ProjectCategoryID`
	FROM `projects`
	WHERE 		`projects`.`ProjectId` = paramProjectId;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_projects_LoadAll`()
BEGIN
	SELECT
		`projects`.`ProjectId` AS `ProjectId`,
		`projects`.`ProjectName` AS `ProjectName`,
		`projects`.`ProjectDescription` AS `ProjectDescription`,
		`projects`.`ImgURL` AS `ImgURL`,
		`projects`.`ProjectURL` AS `ProjectURL`,
		`projects`.`ProjectLeadAccountID` AS `ProjectLeadAccountID`,
		`projects`.`ProjectCategoryID` AS `ProjectCategoryID`
	FROM `projects`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_projects_Add`
(
	 IN paramProjectName VARCHAR(255),
	 IN paramProjectDescription VARCHAR(1025),
	 IN paramImgURL VARCHAR(1025),
	 IN paramProjectURL VARCHAR(1025),
	 IN paramProjectLeadAccountID INT,
	 IN paramProjectCategoryID INT
)
BEGIN
	INSERT INTO `projects` (ProjectName,ProjectDescription,ImgURL,ProjectURL,ProjectLeadAccountID,ProjectCategoryID)
	VALUES (paramProjectName, paramProjectDescription, paramImgURL, paramProjectURL, paramProjectLeadAccountID, paramProjectCategoryID);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_projects_Update`
(
	IN paramProjectId INT,
	IN paramProjectName VARCHAR(255),
	IN paramProjectDescription VARCHAR(1025),
	IN paramImgURL VARCHAR(1025),
	IN paramProjectURL VARCHAR(1025),
	IN paramProjectLeadAccountID INT,
	IN paramProjectCategoryID INT
)
BEGIN
	UPDATE `projects`
	SET ProjectName = paramProjectName
		,ProjectDescription = paramProjectDescription
		,ImgURL = paramImgURL
		,ProjectURL = paramProjectURL
		,ProjectLeadAccountID = paramProjectLeadAccountID
		,ProjectCategoryID = paramProjectCategoryID
	WHERE		`projects`.`ProjectId` = paramProjectId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_projects_Delete`
(
	IN paramProjectId INT
)
BEGIN
	DELETE FROM `projects`
	WHERE		`projects`.`ProjectId` = paramProjectId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_projects_Search`
(
	IN paramProjectId INT,
	IN paramProjectName VARCHAR(255),
	IN paramProjectDescription VARCHAR(1025),
	IN paramImgURL VARCHAR(1025),
	IN paramProjectURL VARCHAR(1025),
	IN paramProjectLeadAccountID INT,
	IN paramProjectCategoryID INT
)
BEGIN
	SELECT
		`projects`.`ProjectId` AS `ProjectId`,
		`projects`.`ProjectName` AS `ProjectName`,
		`projects`.`ProjectDescription` AS `ProjectDescription`,
		`projects`.`ImgURL` AS `ImgURL`,
		`projects`.`ProjectURL` AS `ProjectURL`,
		`projects`.`ProjectLeadAccountID` AS `ProjectLeadAccountID`,
		`projects`.`ProjectCategoryID` AS `ProjectCategoryID`
	FROM `projects`
	WHERE
		COALESCE(projects.`ProjectId`,0) = COALESCE(paramProjectId,projects.`ProjectId`,0)
		AND COALESCE(projects.`ProjectName`,'') = COALESCE(paramProjectName,projects.`ProjectName`,'')
		AND COALESCE(projects.`ProjectDescription`,'') = COALESCE(paramProjectDescription,projects.`ProjectDescription`,'')
		AND COALESCE(projects.`ImgURL`,'') = COALESCE(paramImgURL,projects.`ImgURL`,'')
		AND COALESCE(projects.`ProjectURL`,'') = COALESCE(paramProjectURL,projects.`ProjectURL`,'')
		AND COALESCE(projects.`ProjectLeadAccountID`,0) = COALESCE(paramProjectLeadAccountID,projects.`ProjectLeadAccountID`,0)
		AND COALESCE(projects.`ProjectCategoryID`,0) = COALESCE(paramProjectCategoryID,projects.`ProjectCategoryID`,0);
END //
DELIMITER ;


