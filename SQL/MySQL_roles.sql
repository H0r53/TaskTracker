/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			10/18/2017
Description:	Creates the roles table and respective stored procedures

*/


USE smithadb;



--------------------------------------------------------------
-- Create table
--------------------------------------------------------------



CREATE TABLE `smithadb`.`roles` (
RoleID INT AUTO_INCREMENT,
Role VARCHAR(255),
Description VARCHAR(1025),
CONSTRAINT pk_roles_RoleID PRIMARY KEY (RoleID)
);


--------------------------------------------------------------
-- Create default SCRUD sprocs for this table
--------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_roles_Load`
(
	 IN paramRoleID INT
)
BEGIN
	SELECT
		`roles`.`RoleID` AS `RoleID`,
		`roles`.`Role` AS `Role`,
		`roles`.`Description` AS `Description`
	FROM `roles`
	WHERE 		`roles`.`RoleID` = paramRoleID;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_roles_LoadAll`()
BEGIN
	SELECT
		`roles`.`RoleID` AS `RoleID`,
		`roles`.`Role` AS `Role`,
		`roles`.`Description` AS `Description`
	FROM `roles`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_roles_Add`
(
	 IN paramRole VARCHAR(255),
	 IN paramDescription VARCHAR(1025)
)
BEGIN
	INSERT INTO `roles` (Role,Description)
	VALUES (paramRole, paramDescription);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_roles_Update`
(
	IN paramRoleID INT,
	IN paramRole VARCHAR(255),
	IN paramDescription VARCHAR(1025)
)
BEGIN
	UPDATE `roles`
	SET Role = paramRole
		,Description = paramDescription
	WHERE		`roles`.`RoleID` = paramRoleID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_roles_Delete`
(
	IN paramRoleID INT
)
BEGIN
	DELETE FROM `roles`
	WHERE		`roles`.`RoleID` = paramRoleID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_roles_Search`
(
	IN paramRoleID INT,
	IN paramRole VARCHAR(255),
	IN paramDescription VARCHAR(1025)
)
BEGIN
	SELECT
		`roles`.`RoleID` AS `RoleID`,
		`roles`.`Role` AS `Role`,
		`roles`.`Description` AS `Description`
	FROM `roles`
	WHERE
		COALESCE(roles.`RoleID`,0) = COALESCE(paramRoleID,roles.`RoleID`,0)
		AND COALESCE(roles.`Role`,'') = COALESCE(paramRole,roles.`Role`,'')
		AND COALESCE(roles.`Description`,'') = COALESCE(paramDescription,roles.`Description`,'');
END //
DELIMITER ;


