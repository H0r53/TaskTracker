/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			11/19/2017
Description:	Creates the accounts table and respective stored procedures

*/


USE tasktracker;



--------------------------------------------------------------
-- Create table
--------------------------------------------------------------



CREATE TABLE `tasktracker`.`accounts` (
AccountID INT AUTO_INCREMENT,
FirstName VARCHAR(255),
LastName VARCHAR(255),
Email VARCHAR(255),
Password VARCHAR(255),
Bio VARCHAR(1025),
RoleID INT,
ImgURL VARCHAR(1025),
DateOfBirth DATE,
Location VARCHAR(255),
CreateDate DATETIME,
CONSTRAINT pk_accounts_AccountID PRIMARY KEY (AccountID)
,
CONSTRAINT fk_accounts_RoleID_roles_RoleID FOREIGN KEY (RoleID) REFERENCES roles (RoleID)
);


--------------------------------------------------------------
-- Create default SCRUD sprocs for this table
--------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_accounts_Load`
(
	 IN paramAccountID INT
)
BEGIN
	SELECT
		`accounts`.`AccountID` AS `AccountID`,
		`accounts`.`FirstName` AS `FirstName`,
		`accounts`.`LastName` AS `LastName`,
		`accounts`.`Email` AS `Email`,
		`accounts`.`Password` AS `Password`,
		`accounts`.`Bio` AS `Bio`,
		`accounts`.`RoleID` AS `RoleID`,
		`accounts`.`ImgURL` AS `ImgURL`,
		`accounts`.`DateOfBirth` AS `DateOfBirth`,
		`accounts`.`Location` AS `Location`,
		`accounts`.`CreateDate` AS `CreateDate`
	FROM `accounts`
	WHERE 		`accounts`.`AccountID` = paramAccountID;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_accounts_LoadAll`()
BEGIN
	SELECT
		`accounts`.`AccountID` AS `AccountID`,
		`accounts`.`FirstName` AS `FirstName`,
		`accounts`.`LastName` AS `LastName`,
		`accounts`.`Email` AS `Email`,
		`accounts`.`Password` AS `Password`,
		`accounts`.`Bio` AS `Bio`,
		`accounts`.`RoleID` AS `RoleID`,
		`accounts`.`ImgURL` AS `ImgURL`,
		`accounts`.`DateOfBirth` AS `DateOfBirth`,
		`accounts`.`Location` AS `Location`,
		`accounts`.`CreateDate` AS `CreateDate`
	FROM `accounts`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_accounts_Add`
(
	 IN paramFirstName VARCHAR(255),
	 IN paramLastName VARCHAR(255),
	 IN paramEmail VARCHAR(255),
	 IN paramPassword VARCHAR(255),
	 IN paramBio VARCHAR(1025),
	 IN paramRoleID INT,
	 IN paramImgURL VARCHAR(1025),
	 IN paramDateOfBirth DATE,
	 IN paramLocation VARCHAR(255),
	 IN paramCreateDate DATETIME
)
BEGIN
	INSERT INTO `accounts` (FirstName,LastName,Email,Password,Bio,RoleID,ImgURL,DateOfBirth,Location,CreateDate)
	VALUES (paramFirstName, paramLastName, paramEmail, paramPassword, paramBio, paramRoleID, paramImgURL, paramDateOfBirth, paramLocation, paramCreateDate);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_accounts_Update`
(
	IN paramAccountID INT,
	IN paramFirstName VARCHAR(255),
	IN paramLastName VARCHAR(255),
	IN paramEmail VARCHAR(255),
	IN paramPassword VARCHAR(255),
	IN paramBio VARCHAR(1025),
	IN paramRoleID INT,
	IN paramImgURL VARCHAR(1025),
	IN paramDateOfBirth DATE,
	IN paramLocation VARCHAR(255),
	IN paramCreateDate DATETIME
)
BEGIN
	UPDATE `accounts`
	SET FirstName = paramFirstName
		,LastName = paramLastName
		,Email = paramEmail
		,Password = paramPassword
		,Bio = paramBio
		,RoleID = paramRoleID
		,ImgURL = paramImgURL
		,DateOfBirth = paramDateOfBirth
		,Location = paramLocation
		,CreateDate = paramCreateDate
	WHERE		`accounts`.`AccountID` = paramAccountID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_accounts_Delete`
(
	IN paramAccountID INT
)
BEGIN
	DELETE FROM `accounts`
	WHERE		`accounts`.`AccountID` = paramAccountID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_accounts_Search`
(
	IN paramAccountID INT,
	IN paramFirstName VARCHAR(255),
	IN paramLastName VARCHAR(255),
	IN paramEmail VARCHAR(255),
	IN paramPassword VARCHAR(255),
	IN paramBio VARCHAR(1025),
	IN paramRoleID INT,
	IN paramImgURL VARCHAR(1025),
	IN paramDateOfBirth DATE,
	IN paramLocation VARCHAR(255),
	IN paramCreateDate DATETIME
)
BEGIN
	SELECT
		`accounts`.`AccountID` AS `AccountID`,
		`accounts`.`FirstName` AS `FirstName`,
		`accounts`.`LastName` AS `LastName`,
		`accounts`.`Email` AS `Email`,
		`accounts`.`Password` AS `Password`,
		`accounts`.`Bio` AS `Bio`,
		`accounts`.`RoleID` AS `RoleID`,
		`accounts`.`ImgURL` AS `ImgURL`,
		`accounts`.`DateOfBirth` AS `DateOfBirth`,
		`accounts`.`Location` AS `Location`,
		`accounts`.`CreateDate` AS `CreateDate`
	FROM `accounts`
	WHERE
		COALESCE(accounts.`AccountID`,0) = COALESCE(paramAccountID,accounts.`AccountID`,0)
		AND COALESCE(accounts.`FirstName`,'') = COALESCE(paramFirstName,accounts.`FirstName`,'')
		AND COALESCE(accounts.`LastName`,'') = COALESCE(paramLastName,accounts.`LastName`,'')
		AND COALESCE(accounts.`Email`,'') = COALESCE(paramEmail,accounts.`Email`,'')
		AND COALESCE(accounts.`Password`,'') = COALESCE(paramPassword,accounts.`Password`,'')
		AND COALESCE(accounts.`Bio`,'') = COALESCE(paramBio,accounts.`Bio`,'')
		AND COALESCE(accounts.`RoleID`,0) = COALESCE(paramRoleID,accounts.`RoleID`,0)
		AND COALESCE(accounts.`ImgURL`,'') = COALESCE(paramImgURL,accounts.`ImgURL`,'')
		AND COALESCE(accounts.`DateOfBirth`,'') = COALESCE(paramDateOfBirth,accounts.`DateOfBirth`,'')
		AND COALESCE(accounts.`Location`,'') = COALESCE(paramLocation,accounts.`Location`,'')
		AND COALESCE(CAST(accounts.`CreateDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramCreateDate AS DATE),CAST(accounts.`CreateDate` AS DATE), CAST(NOW() AS DATE));
END //
DELIMITER ;


