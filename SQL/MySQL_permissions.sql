/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			10/24/2017
Description:	Creates the permissions table and respective stored procedures

*/


USE smithadb;



--------------------------------------------------------------
-- Create table
--------------------------------------------------------------



CREATE TABLE `smithadb`.`permissions` (
PermissionID INT AUTO_INCREMENT,
PermissionName VARCHAR(255),
Description VARCHAR(1025),
CreateDate DATETIME,
CONSTRAINT pk_permissions_PermissionID PRIMARY KEY (PermissionID)
);


--------------------------------------------------------------
-- Create default SCRUD sprocs for this table
--------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_permissions_Load`
(
	 IN paramPermissionID INT
)
BEGIN
	SELECT
		`permissions`.`PermissionID` AS `PermissionID`,
		`permissions`.`PermissionName` AS `PermissionName`,
		`permissions`.`Description` AS `Description`,
		`permissions`.`CreateDate` AS `CreateDate`
	FROM `permissions`
	WHERE 		`permissions`.`PermissionID` = paramPermissionID;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_permissions_LoadAll`()
BEGIN
	SELECT
		`permissions`.`PermissionID` AS `PermissionID`,
		`permissions`.`PermissionName` AS `PermissionName`,
		`permissions`.`Description` AS `Description`,
		`permissions`.`CreateDate` AS `CreateDate`
	FROM `permissions`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_permissions_Add`
(
	 IN paramPermissionName VARCHAR(255),
	 IN paramDescription VARCHAR(1025),
	 IN paramCreateDate DATETIME
)
BEGIN
	INSERT INTO `permissions` (PermissionName,Description,CreateDate)
	VALUES (paramPermissionName, paramDescription, paramCreateDate);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_permissions_Update`
(
	IN paramPermissionID INT,
	IN paramPermissionName VARCHAR(255),
	IN paramDescription VARCHAR(1025),
	IN paramCreateDate DATETIME
)
BEGIN
	UPDATE `permissions`
	SET PermissionName = paramPermissionName
		,Description = paramDescription
		,CreateDate = paramCreateDate
	WHERE		`permissions`.`PermissionID` = paramPermissionID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_permissions_Delete`
(
	IN paramPermissionID INT
)
BEGIN
	DELETE FROM `permissions`
	WHERE		`permissions`.`PermissionID` = paramPermissionID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `smithadb`.`usp_permissions_Search`
(
	IN paramPermissionID INT,
	IN paramPermissionName VARCHAR(255),
	IN paramDescription VARCHAR(1025),
	IN paramCreateDate DATETIME
)
BEGIN
	SELECT
		`permissions`.`PermissionID` AS `PermissionID`,
		`permissions`.`PermissionName` AS `PermissionName`,
		`permissions`.`Description` AS `Description`,
		`permissions`.`CreateDate` AS `CreateDate`
	FROM `permissions`
	WHERE
		COALESCE(permissions.`PermissionID`,0) = COALESCE(paramPermissionID,permissions.`PermissionID`,0)
		AND COALESCE(permissions.`PermissionName`,'') = COALESCE(paramPermissionName,permissions.`PermissionName`,'')
		AND COALESCE(permissions.`Description`,'') = COALESCE(paramDescription,permissions.`Description`,'')
		AND COALESCE(CAST(permissions.`CreateDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramCreateDate AS DATE),CAST(permissions.`CreateDate` AS DATE), CAST(NOW() AS DATE));
END //
DELIMITER ;


