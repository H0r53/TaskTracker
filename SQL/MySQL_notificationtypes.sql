/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			11/19/2017
Description:	Creates the notificationtypes table and respective stored procedures

*/


USE tasktracker;



-- -----------------
-- ----------------- Create table
-- -----------------



CREATE TABLE `tasktracker`.`notificationtypes` (
NotificationTypeID INT AUTO_INCREMENT,
Notification VARCHAR(255),
Description VARCHAR(1025),
CONSTRAINT pk_notificationtypes_NotificationTypeID PRIMARY KEY (NotificationTypeID)
);


-- -----------------
-- ----------------- Create default SCRUD sprocs for this table
-- -----------------


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_notificationtypes_Load`
(
	 IN paramNotificationTypeID INT
)
BEGIN
	SELECT
		`notificationtypes`.`NotificationTypeID` AS `NotificationTypeID`,
		`notificationtypes`.`Notification` AS `Notification`,
		`notificationtypes`.`Description` AS `Description`
	FROM `notificationtypes`
	WHERE 		`notificationtypes`.`NotificationTypeID` = paramNotificationTypeID;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_notificationtypes_LoadAll`()
BEGIN
	SELECT
		`notificationtypes`.`NotificationTypeID` AS `NotificationTypeID`,
		`notificationtypes`.`Notification` AS `Notification`,
		`notificationtypes`.`Description` AS `Description`
	FROM `notificationtypes`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_notificationtypes_Add`
(
	 IN paramNotification VARCHAR(255),
	 IN paramDescription VARCHAR(1025)
)
BEGIN
	INSERT INTO `notificationtypes` (Notification,Description)
	VALUES (paramNotification, paramDescription);
	-- ----------------- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_notificationtypes_Update`
(
	IN paramNotificationTypeID INT,
	IN paramNotification VARCHAR(255),
	IN paramDescription VARCHAR(1025)
)
BEGIN
	UPDATE `notificationtypes`
	SET Notification = paramNotification
		,Description = paramDescription
	WHERE		`notificationtypes`.`NotificationTypeID` = paramNotificationTypeID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_notificationtypes_Delete`
(
	IN paramNotificationTypeID INT
)
BEGIN
	DELETE FROM `notificationtypes`
	WHERE		`notificationtypes`.`NotificationTypeID` = paramNotificationTypeID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_notificationtypes_Search`
(
	IN paramNotificationTypeID INT,
	IN paramNotification VARCHAR(255),
	IN paramDescription VARCHAR(1025)
)
BEGIN
	SELECT
		`notificationtypes`.`NotificationTypeID` AS `NotificationTypeID`,
		`notificationtypes`.`Notification` AS `Notification`,
		`notificationtypes`.`Description` AS `Description`
	FROM `notificationtypes`
	WHERE
		COALESCE(notificationtypes.`NotificationTypeID`,0) = COALESCE(paramNotificationTypeID,notificationtypes.`NotificationTypeID`,0)
		AND COALESCE(notificationtypes.`Notification`,'') = COALESCE(paramNotification,notificationtypes.`Notification`,'')
		AND COALESCE(notificationtypes.`Description`,'') = COALESCE(paramDescription,notificationtypes.`Description`,'');
END //
DELIMITER ;


