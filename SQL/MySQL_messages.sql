/*
Author:			This code was generated by DALGen version 1.0.0.0 available at https://github.com/H0r53/DALGen 
Date:			11/19/2017
Description:	Creates the messages table and respective stored procedures

*/


USE tasktracker;



--------------------------------------------------------------
-- Create table
--------------------------------------------------------------



CREATE TABLE `tasktracker`.`messages` (
MessageID INT AUTO_INCREMENT,
Description VARCHAR(255),
SenderAccountID INT,
RecipientAccountID INT,
SentDate DATETIME,
Seen INT,
CONSTRAINT pk_messages_MessageID PRIMARY KEY (MessageID)
,
CONSTRAINT fk_messages_SenderAccountID_accounts_AccountID FOREIGN KEY (SenderAccountID) REFERENCES accounts (AccountID)
,
CONSTRAINT fk_messages_RecipientAccountID_accounts_AccountID FOREIGN KEY (RecipientAccountID) REFERENCES accounts (AccountID)
);


--------------------------------------------------------------
-- Create default SCRUD sprocs for this table
--------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_messages_Load`
(
	 IN paramMessageID INT
)
BEGIN
	SELECT
		`messages`.`MessageID` AS `MessageID`,
		`messages`.`Description` AS `Description`,
		`messages`.`SenderAccountID` AS `SenderAccountID`,
		`messages`.`RecipientAccountID` AS `RecipientAccountID`,
		`messages`.`SentDate` AS `SentDate`,
		`messages`.`Seen` AS `Seen`
	FROM `messages`
	WHERE 		`messages`.`MessageID` = paramMessageID;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_messages_LoadAll`()
BEGIN
	SELECT
		`messages`.`MessageID` AS `MessageID`,
		`messages`.`Description` AS `Description`,
		`messages`.`SenderAccountID` AS `SenderAccountID`,
		`messages`.`RecipientAccountID` AS `RecipientAccountID`,
		`messages`.`SentDate` AS `SentDate`,
		`messages`.`Seen` AS `Seen`
	FROM `messages`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_messages_Add`
(
	 IN paramDescription VARCHAR(255),
	 IN paramSenderAccountID INT,
	 IN paramRecipientAccountID INT,
	 IN paramSentDate DATETIME,
	 IN paramSeen INT
)
BEGIN
	INSERT INTO `messages` (Description,SenderAccountID,RecipientAccountID,SentDate,Seen)
	VALUES (paramDescription, paramSenderAccountID, paramRecipientAccountID, paramSentDate, paramSeen);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_messages_Update`
(
	IN paramMessageID INT,
	IN paramDescription VARCHAR(255),
	IN paramSenderAccountID INT,
	IN paramRecipientAccountID INT,
	IN paramSentDate DATETIME,
	IN paramSeen INT
)
BEGIN
	UPDATE `messages`
	SET Description = paramDescription
		,SenderAccountID = paramSenderAccountID
		,RecipientAccountID = paramRecipientAccountID
		,SentDate = paramSentDate
		,Seen = paramSeen
	WHERE		`messages`.`MessageID` = paramMessageID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_messages_Delete`
(
	IN paramMessageID INT
)
BEGIN
	DELETE FROM `messages`
	WHERE		`messages`.`MessageID` = paramMessageID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tasktracker`.`usp_messages_Search`
(
	IN paramMessageID INT,
	IN paramDescription VARCHAR(255),
	IN paramSenderAccountID INT,
	IN paramRecipientAccountID INT,
	IN paramSentDate DATETIME,
	IN paramSeen INT
)
BEGIN
	SELECT
		`messages`.`MessageID` AS `MessageID`,
		`messages`.`Description` AS `Description`,
		`messages`.`SenderAccountID` AS `SenderAccountID`,
		`messages`.`RecipientAccountID` AS `RecipientAccountID`,
		`messages`.`SentDate` AS `SentDate`,
		`messages`.`Seen` AS `Seen`
	FROM `messages`
	WHERE
		COALESCE(messages.`MessageID`,0) = COALESCE(paramMessageID,messages.`MessageID`,0)
		AND COALESCE(messages.`Description`,'') = COALESCE(paramDescription,messages.`Description`,'')
		AND COALESCE(messages.`SenderAccountID`,0) = COALESCE(paramSenderAccountID,messages.`SenderAccountID`,0)
		AND COALESCE(messages.`RecipientAccountID`,0) = COALESCE(paramRecipientAccountID,messages.`RecipientAccountID`,0)
		AND COALESCE(CAST(messages.`SentDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramSentDate AS DATE),CAST(messages.`SentDate` AS DATE), CAST(NOW() AS DATE))
		AND COALESCE(messages.`Seen`,0) = COALESCE(paramSeen,messages.`Seen`,0);
END //
DELIMITER ;


